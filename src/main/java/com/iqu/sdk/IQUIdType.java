package com.iqu.sdk;

/**
 * Define the possible ids supported by the SDK. The id types are defined with a
 * fixed integer value, since the id type value is used when saving and loading
 * id values.
 */
public enum IQUIdType {
    /**
     * An id that is generated by SDK and stored in local persistent storage.
     */
    SDK(0),

    /**
     * An id that is obtained from Facebook.
     */
    FACEBOOK(1),

    /**
     * An id that is obtained from Google+.
     */
    GOOGLE_PLUS(2),

    /**
     * An id that is obtained from Twitter.
     */
    TWITTER(3),

    /**
     * A custom id
     */
    CUSTOM(4),

    /**
     * An id obtained from android.os.Build.SERIAL
     */
    ANDROID_SERIAL(5),

    /**
     * An id obtained from settings.secure.ANDROID_ID
     */
    ANDROID_ID(6),

    /**
     * An id obtained from Google Play.
     */
    ANDROID_ADVERTISING(7),

    /**
     * Not really an id, but contains the limit ad tracking value from Google
     * Play ("0" indicates limited ad tracking).
     */
    ANDROID_AD_TRACKING(8);

    //
    // PRIVATE VARS
    //

    /**
     * Store value
     */
    private final int m_value;

    //
    // PRIVATE METHODS
    //

    /**
     * Creates a new instance.
     * 
     * @param aValue
     *            integer source value
     */
    IQUIdType(int aValue) {
        this.m_value = aValue;
    }

    //
    // PUBLIC PROPERTIES
    //

    /**
     * Returns the source as integer.
     * 
     * @return source as integer
     */
    public int getValue() {
        return this.m_value;
    }

    //
    // PUBLIC METHODS
    //

    /**
     * Find a specific id type for an integer value.
     * 
     * @param aType
     *            integer value to find type for
     * 
     * @return the found id type or null if none could be found for aType
     */
    public static IQUIdType find(int aType) {
        for (IQUIdType type : IQUIdType.values()) {
            if (type.getValue() == aType) {
                return type;
            }
        }
        return null;
    }
}
